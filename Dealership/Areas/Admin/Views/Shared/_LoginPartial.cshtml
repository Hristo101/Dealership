@using Microsoft.AspNetCore.Identity
@using System.Security.Claims
@inject SignInManager<IdentityUser> SignInManager
@inject UserManager<IdentityUser> UserManager

@{
    string userName = string.Empty;

    if (SignInManager.IsSignedIn(User) && User.IsInRole("Admin"))
    {
        userName = User.FindFirstValue(Dealership.Core.Constants.CustomClaims.UserFullNameClaim) ?? string.Empty;
    }
}

<ul class="navbar-nav">
    @if (SignInManager.IsSignedIn(User) && User.IsInRole("Admin"))
    {
        <li class="nav-item">
            <a class="nav-link text-dark" asp-area="Admin" asp-page="/Dashboard/Index" title="Manage">Hello, Admin @userName!</a>
        </li>
        <li class="nav-item">
            <form class="form-inline" asp-area="Admin" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Action("Index", "Home", new { area = "" })">
                <button type="submit" class="nav-link btn btn-link text-dark">Logout</button>
            </form>
        </li>
    }
    else if (!SignInManager.IsSignedIn(User))
    {
        <li class="nav-item">
            <a class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Register">Register</a>
        </li>
        <li class="nav-item">
            <a class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Login">Login</a>
        </li>
    }
</ul>
